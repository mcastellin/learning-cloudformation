AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates a pool of workers nodes and connects them to a
  Jenkins master server.

Parameters:
  LambdasBucketName:
    Type: String
    Description: The s3 bucket containing packaged lambda functions
  KeyPairName:
    Type: String
    Description: What is the name of the keypair to use for ssh access?
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: What is the Vpc ID where the instance should be deployed?
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of subnets for Jenkins nodes deployment
  AssignPublicIp:
    Type: String
    Description: Should a public IP be assigned to the worker nodes?
    Default: false
    AllowedValues:
      - true
      - false
  InstanceType:
    Type: String
    Description: Which instance type should be used for the Jenkins worker nodes?
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.large
  LinuxAmi:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Read the name of th latest linuxAmiId from SSM
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  MasterApplicationPort:
    Type: Number
    Description: What port is the Jenkins master application running on?
    Default: 8080
  AdminPort:
    Type: Number
    Description: Which port should be used for node administration?
    Default: 22
  ExternalIp:
    Type: String
    Description: Which is the Cidr block for external admin access?
    Default: 0.0.0.0/0
    AllowedPattern: ^([0-9]{1,3}\.){3}([0-9]{1,3})\/[0-9]{1,2}$
  WorkersSecGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Which security group should worker nodes assume?
  MasterPrivateIp:
    Type: String
    Description: What is the private IP address of the Jenkins master node?
    AllowedPattern: ^([0-9]{1,3}\.){3}([0-9]{1,3})
  WorkersCount:
    Type: Number
    Description: How many worker nodes should be created?
    Default: 1
    MinValue: 0
    MaxValue: 3

Conditions:
  PublicIpAssigned: !Equals [!Ref AssignPublicIp, "true"]

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  AutoscalingValuesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: A lambda function to calculate the min and max values of an autoscaling group
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Code:
        S3Bucket: !Ref LambdasBucketName
        S3Key: _lambda_releases/autoscaling_values.zip

  AutoscalingValues:
    Type: Custom::AutoscalingInstances
    Properties:
      ServiceToken: !GetAtt AutoscalingValuesFunction.Arn
      DesiredInstances: !Ref WorkersCount

  JenkinsWorkersLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: !Ref AssignPublicIp
      KeyName: !Ref KeyPairName
      # IamInstanceProfile:
      ImageId: !Ref LinuxAmi
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WorkersSecGroupId
      UserData:
        Fn::Base64: !Join
          - "\n"
          - - "#!/bin/bash -ex"
            - yum update -y
            - yum install -y git
            - amazon-linux-extras install -y ansible2
            - ""
            - ansible-pull \
            - -o -C main -U git://github.com/mcastellin/ansible-playbooks \
            - --connection=local \
            - --inventory 127.0.0.1, \
            - !Sub "--extra-vars \"master_ip=${MasterPrivateIp}\" \\"
            - jenkins/cloud-init/worker/playbook.yaml

  WorkersAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchConfigurationName: !Ref JenkinsWorkersLaunchConfig
      MaxSize: !GetAtt AutoscalingValues.Max
      MinSize: !GetAtt AutoscalingValues.Min
      DesiredCapacity: !GetAtt AutoscalingValues.Desired
      Tags:
        - Key: Name
          Value: Jenkins-worker
          PropagateAtLaunch: True
